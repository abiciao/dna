{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["params","fps_limit","particles","collisions","enable","number","value","density","size","line_linked","distance","opacity","move","speed","anim","opacity_min","sync","polygon","scale","type","radius","url","inline","arrangement","draw","stroke","color","retina_detect","interactivity","events","onhover","mode","modes","grab","links","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAEIA,EAAS,CACXC,UAAW,GACXC,UAAW,CACTC,WAAY,CACVC,QAAQ,GAEVC,OAAQ,CACNC,MAAO,KACPC,QAAS,CACPH,QAAQ,IAGZI,KAAM,CACJF,MAAO,GAETG,YAAa,CACXL,QAAQ,EACRM,SAAU,GACVC,QAAS,IAEXC,KAAM,CACJC,MAAO,IAETF,QAAS,CACPG,KAAM,CACJV,QAAQ,EACRW,YAAa,IACbF,MAAO,EACPG,MAAM,GAERV,MAAO,KAGXW,QAAS,CACPb,QAAQ,EACRc,MAAO,IACPC,KAAM,SACNP,KAAM,CACJQ,OAAQ,GAEVC,IAAK,YACLC,OAAQ,CACNC,YAAa,eAEfC,KAAM,CACJpB,QAAQ,EACRqB,OAAQ,CACNC,MAAO,4BAIbC,eAAe,EACfC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACP1B,QAAQ,EACR2B,KAAM,SAGVC,MAAO,CACLC,KAAM,CACJvB,SAAU,GACVwB,MAAO,CACLvB,QAAS,OAeJwB,MARf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,CAAWpC,OAAQA,IADrB,QC9DWqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3b64bddb.chunk.js","sourcesContent":["import \"./App.css\";\nimport Particles from \"react-particles-js\";\nlet params = {\n  fps_limit: 28,\n  particles: {\n    collisions: {\n      enable: false,\n    },\n    number: {\n      value: 5200,\n      density: {\n        enable: false,\n      },\n    },\n    size: {\n      value: 2,\n    },\n    line_linked: {\n      enable: false,\n      distance: 20,\n      opacity: 0.4,\n    },\n    move: {\n      speed: 0.3,\n    },\n    opacity: {\n      anim: {\n        enable: true,\n        opacity_min: 0.05,\n        speed: 1,\n        sync: false,\n      },\n      value: 0.4,\n    },\n  },\n  polygon: {\n    enable: true,\n    scale: 0.07,\n    type: \"inline\",\n    move: {\n      radius: 3,\n    },\n    url: \"/test.svg\",\n    inline: {\n      arrangement: \"equidistant\",\n    },\n    draw: {\n      enable: true,\n      stroke: {\n        color: \"rgba(255, 255, 255, 0)\",\n      },\n    },\n  },\n  retina_detect: false,\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"grab\",\n      },\n    },\n    modes: {\n      grab: {\n        distance: 50,\n        links: {\n          opacity: 1,\n        },\n      },\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Particles params={params}></Particles>;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}